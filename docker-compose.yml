services:
  app:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: nginx-proxy-manager
    restart: unless-stopped
    ports:
      - '${HTTP_PORT:-80}:80'
      - '${HTTPS_PORT:-443}:443'
      - '${ADMIN_PORT:-81}:81'
    environment:
      DB_MYSQL_HOST: "db"
      DB_MYSQL_PORT: ${DB_PORT:-3306}
      DB_MYSQL_USER: ${DB_USER:-npm}
      DB_MYSQL_PASSWORD: ${DB_PASSWORD}
      DB_MYSQL_NAME: ${DB_NAME:-npm}
      DISABLE_IPV6: ${DISABLE_IPV6:-true}
    volumes:
      - npm_data:/data
      - npm_letsencrypt:/etc/letsencrypt
    depends_on:
      - db
    networks:
      - io
      - internal

  db:
    image: 'jc21/mariadb-aria:latest'
    container_name: nginx-proxy-manager-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME:-npm}
      MYSQL_USER: ${DB_USER:-npm}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - npm_db:/var/lib/mysql
    networks:
      - internal

  backup:
    image: 'alpine:latest'
    container_name: nginx-proxy-manager-backup
    restart: unless-stopped
    command: >
      sh -c "
      apk add --no-cache tar gzip &&
      while true; do
        echo \"Starting backup at $$(date)\"
        tar -czf /backup/npm_data_$$(date +%Y%m%d_%H%M%S).tar.gz -C /data . &&
        tar -czf /backup/npm_letsencrypt_$$(date +%Y%m%d_%H%M%S).tar.gz -C /letsencrypt . &&
        tar -czf /backup/npm_db_$$(date +%Y%m%d_%H%M%S).tar.gz -C /db . &&
        echo \"Backup completed at $$(date)\"
        find /backup -name '*.tar.gz' -mtime +${BACKUP_RETENTION_DAYS:-7} -delete &&
        echo \"Old backups cleaned up\"
        sleep ${BACKUP_INTERVAL:-86400}
      done
      "
    volumes:
      - npm_data:/data:ro
      - npm_letsencrypt:/letsencrypt:ro
      - npm_db:/db:ro
      - ./backup:/backup
    networks:
      - internal

volumes:
  npm_data:
    external: true
  npm_letsencrypt:
    external: true
  npm_db:
    external: true

networks:
  io:
    external: true
  internal:
    driver: bridge
